{"version":3,"sources":["components/Menu/index.js","App.js","serviceWorker.js","index.js"],"names":["library","add","faAngleLeft","faAngleRight","faArrowsAltH","faArrowsAltV","faPen","faSave","faWindowClose","Menu","_ref","handleLoadCanvas","handlePrint","handleSave","colors","setColors","height","width","handleBackgroundImage","cellColor","handleChange","handleSubmit","handleCellColor","handleBackgroundColor","_useState","useState","_useState2","Object","slicedToArray","editingColors","setEditingColors","_useState3","JSON","parse","stringify","_useState4","newColors","setNewColors","_useState5","_useState6","activeColorEditId","setActiveColorEditId","_useState7","_useState8","activeColorEditColor","setActiveColorEditColor","useEffect","tmpColors","color","id","console","log","handleEditStart","handleEditSave","handleEditCancel","menu","react_default","a","createElement","className","react_fontawesome_index_es","icon","type","name","min","value","onChange","onClick","_ref2","_ref2$colorsToRender","colorsToRender","_ref2$colorSetter","colorSetter","obj","colorElementArr","length","forEach","colorObj","push","key","style","background","handleColorEdit","lib","hex","Fragment","map","e","App","props","window","addEventListener","confirm","setHeight","setWidth","setBackground","setCellColor","_useState9","_useState10","mouseDown","setMouseDown","_useState11","_useState12","menuVisible","setMenuVisible","_useState13","_useState14","backgroundImage","setBackgroundImage","_useState15","_useState16","alertUser","removeEventListener","performance","preventDefault","returnValue","event","canvas","document","querySelector","innerHTML","x","row","concat","appendChild","y","cell","numRow","placeholderCell","classList","handleCellColorOnClick","idToBeUpdated","target","getElementById","String","startsWith","backgroundColor","handleMouseState","components_Menu","storedCanvas","localStorage","getItem","setItem","open","FileReader","file","files","reader","onload","ev","result","readAsDataURL","alert","handleMenuVisible","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","onDoubleClick","parentNode","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a8a7cefb.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { SketchPicker } from 'react-color';\nimport './style.css';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleLeft, faAngleRight, faArrowsAltH, faArrowsAltV, faPen, faSave, faWindowClose } from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faAngleLeft, faAngleRight, faArrowsAltH, faArrowsAltV, faPen, faSave, faWindowClose);\n\nconst Menu = ( {handleLoadCanvas, handlePrint, handleSave, colors, setColors, height, width, handleBackgroundImage, cellColor, handleChange, handleSubmit, handleBackgroundColor, handleCellColor} ) => {\n\t\n\tconst [editingColors, setEditingColors] = useState(false);\n\tconst [newColors, setNewColors] = useState(JSON.parse(JSON.stringify(colors)));\n\tconst [activeColorEditId, setActiveColorEditId] = useState(-1);\n\tconst [activeColorEditColor, setActiveColorEditColor] = useState('');\n\n\n\tuseEffect(() => {\n\t\tif (activeColorEditId !== -1) {\n\t\t\tlet tmpColors = JSON.parse(JSON.stringify(newColors))\n\t\t\ttmpColors[activeColorEditId-1] = {color: activeColorEditColor, id: activeColorEditId};\n\t\t\tsetNewColors(tmpColors);\n\t\t\tconsole.log(tmpColors)\n\t\t}\n\t}, [activeColorEditColor])\n\n\tconst handleColorEdit = (color, id) => {\n\t\tsetActiveColorEditId(id);\n\t\tsetActiveColorEditColor(color);\n\t}\n\n\n\tconst handleEditStart = () => {\n\t\tsetNewColors(JSON.parse(JSON.stringify(colors)))\n\t\tsetEditingColors(!editingColors);\n\t}\n\n\tconst handleEditSave = () => {\n\t\thandleCellColor({color: activeColorEditColor, id: activeColorEditId})\n\t\tsetActiveColorEditId(-1);\n\t\tconsole.log(JSON.parse(JSON.stringify(newColors)))\n\t\tsetColors(JSON.parse(JSON.stringify(newColors)))\n\t\tsetEditingColors(false);\n\t}\n\n\tconst handleEditCancel = () => {\n\t\tconsole.log('Editing canceled')\n\t\tsetActiveColorEditId(-1);\n\t\tsetEditingColors(!editingColors);\n\t}\n\n\tconst ColorPicker = ({ colorsToRender = [], colorSetter = (obj) => console.log(\"set color to\", obj) }) => {\n\t\tlet colorArray;\n\t\tlet colorElementArr = [];\n\t\tif (!colorsToRender.length) {\n\t\t\tcolorArray = [\n\t\t\t\t{ color: '#009688', id: 1 },\n\t\t\t\t{ color: '#fff', id: 2 },\n\t\t\t\t{ color: '#fff', id: 3 },\n\t\t\t\t{ color: '#fff', id: 4 },\n\t\t\t\t{ color: '#fff', id: 5 },\n\t\t\t\t{ color: '#fff', id: 6 },\n\t\t\t\t{ color: '#fff', id: 7 },\n\t\t\t\t{ color: '#fff', id: 8 },\n\t\t\t\t{ color: '#fff', id: 9 },\n\t\t\t]\n\t\t} else {\n\t\t\tcolorArray = colorsToRender;\n\t\t}\n\n\t\tcolorArray.forEach((colorObj) => {\n\t\t\tlet {color, id} = colorObj;\n\t\t\tcolorElementArr.push(\n\t\t\t\t<div\n\t\t\t\tkey={id}\n\t\t\t\t>\n\t\t\t\t\t<div \n\t\t\t\t\tclassName={editingColors ? (activeColorEditId === id ? 'colorPicker-cell color-edit-selected' : 'colorPicker-cell color-edit') : (cellColor.id === id ? 'colorPicker-cell color-selected' : 'colorPicker-cell') }\n\t\t\t\t\tstyle={{background: id === activeColorEditId ? activeColorEditColor : color }}\n\t\t\t\t\tonClick={editingColors ? () => handleColorEdit(color, id) : () => colorSetter(colorObj)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<p className='cell-num noselect'>{id}</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t{id === activeColorEditId && <div className='sketch'><SketchPicker color={color} onChange={(color) => setActiveColorEditColor(color.hex)}/> </div>}\n\t\t\t\t</div>\n\t\t\t)\n\t\t})\n\t\tcolorElementArr.push(\n\t\t\t<React.Fragment key='edit'>{!editingColors &&\n\t\t\t<div \n\t\t\tkey={'edit'}\n\t\t\tclassName={'colorPicker-cell utility-button'}\n\t\t\tonClick={handleEditStart}\n\t\t\t>\n\t\t\t\t<FontAwesomeIcon icon=\"pen\"/>\n\t\t\t</div>}</React.Fragment>\n\t\t)\n\t\tcolorElementArr.push(\n\t\t\t<React.Fragment key='edit-save'>{editingColors &&\n\t\t\t<div \n\t\t\tkey={'edit-save'}\n\t\t\tclassName={'colorPicker-cell utility-button'}\n\t\t\tonClick={handleEditSave}\n\t\t\t>\n\t\t\t\t<FontAwesomeIcon icon=\"save\"/>\n\t\t\t</div>}</React.Fragment>\n\t\t)\n\t\tcolorElementArr.push(\n\t\t\t<React.Fragment key='edit-cancel'>{editingColors &&\n\t\t\t<div \n\t\t\tkey={'edit-cancel'}\n\t\t\tclassName={'colorPicker-cell utility-button'}\n\t\t\tonClick={handleEditCancel}\n\t\t\t>\n\t\t\t\t<FontAwesomeIcon icon=\"window-close\"/>\n\t\t\t</div>}</React.Fragment>\n\t\t)\n\t\treturn (\n\t\t\t<div className=\"colorPicker-row\">\n\t\t\t\t{colorElementArr.map(e => e)}\n\t\t\t</div>\n\t\t)\n\t}\n\t\n\tconst menu = (<div className=\"App-Settings\">\n                <form id=\"sizePicker\">\n\t\t\t\t<div className='form-buttons'>\n                  <label>\n                  <FontAwesomeIcon icon=\"arrows-alt-v\" /> Height:\n                  <input\n                    type=\"number\"\n                    id=\"input_height\"\n                    name=\"height\"\n                    min=\"1\"\n                    value={height}\n                    onChange={handleChange} />\n                  </label>\n                  <br />\n                  <label>\n                  <FontAwesomeIcon icon=\"arrows-alt-h\" /> Width:\n                  <input\n                    type=\"number\"\n                    id=\"input_width\"\n                    name=\"width\"\n                    min=\"1\"\n                    value={width}\n                    onChange={handleChange} />\n                  </label>\n\t\t\t\t  </div>\n                  <div className='form-buttons'>\n                  <input\n                    type=\"submit\"\n\t\t\t\t\tclassName=\"input_submit\"\n                    value=\"Create new canvas\"\n                    onClick={handleSubmit} />\n\t\t\t\t<br />\n\t\t\t\t<input\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tclassName=\"input_submit\"\n\t\t\t\t\tvalue=\"Save canvas\"\n\t\t\t\t\tonClick={handleSave}\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t</div>\n\n\t\t\t\t<div className='form-buttons'>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\tclassName=\"input_submit\"\n\t\t\t\t\tvalue=\"Show\"\n\t\t\t\t\tonClick={handlePrint}\n\t\t\t\t/>\n\t\t\t\t<br />\n\t\t\t\t<input\n                    type=\"submit\"\n\t\t\t\t\tclassName=\"input_submit\"\n                    value=\"Load saved canvas\"\n                    onClick={handleLoadCanvas} />\n\n\t\t\t\t<input\n                    type=\"file\"\n\t\t\t\t\tclassName=\"input_submit\"\n                    value=\"\"\n                    onChange={handleBackgroundImage} />\n\t\t\t\t</div>\n                </form>\n\n\n\t\t\t\t<ColorPicker colorsToRender={editingColors ? newColors : colors} colorSetter={handleCellColor}/>\n                \n\n              </div>);\n\n\t\treturn (\n\t\t<>\n\t\t\t{menu}\n\t\t</>\n\t\t)\n}\n\nexport default Menu","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Menu from './components/Menu';\n\nconst App = (props) => {\n    window.addEventListener('beforeunload', () => {\n      window.confirm()\n    })\n\n    const [height, setHeight] = useState(40)\n    const [width, setWidth] = useState(78)\n    const [background, setBackground] = useState('#fff')\n    const [cellColor, setCellColor] = useState({color: '#f44336', id: 1})\n    const [mouseDown, setMouseDown] = useState(false)\n    const [menuVisible, setMenuVisible] = useState(true)\n    const [backgroundImage, setBackgroundImage] = useState('')\n    const [colors, setColors] = useState([\n\t\t\t\t{ color: '#009688', id: 1 },\n\t\t\t\t{ color: '#fff', id: 2 },\n\t\t\t\t{ color: '#fff', id: 3 },\n\t\t\t\t{ color: '#fff', id: 4 },\n\t\t\t\t{ color: '#fff', id: 5 },\n\t\t\t\t{ color: '#fff', id: 6 },\n\t\t\t\t{ color: '#fff', id: 7 },\n\t\t\t\t{ color: '#fff', id: 8 },\n\t\t\t\t{ color: '#fff', id: 9 },\n\t\t\t])\n\n      useEffect(() => {\n        handleSubmit();\n      }, [])\n\n      useEffect(() => {\n    window.addEventListener(\"beforeunload\", alertUser);\n    return () => {\n      window.removeEventListener(\"beforeunload\", alertUser);\n    };\n  }, [window.performance]);\n  const alertUser = (e) => {\n    e.preventDefault();\n    e.returnValue = \"\";\n  };\n\n  const handleChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    switch(name) {\n      case 'width':\n        setWidth(value);\n        break;\n      case 'height':\n        setHeight(value);\n        break;\n      default:\n        console.log('errr');\n    }\n  }\n  \n  const handleSave = (e) => {\n    e.preventDefault();\n\n    if (window.confirm('This will override the previous save, are you sure you want to save?')) {\n      const canvas = document.querySelector(\"#pixel_canvas\");\n      console.log(canvas.innerHTML);\n\n      localStorage.setItem('savedCanvas', canvas.innerHTML);\n    }\n  }\n\n  const handleLoadCanvas = (e) => {\n    e.preventDefault();\n    if (window.confirm('This will load previously saved canvas and remove all unsaved data, are you sure you want to continue?')) {\n      const canvas = document.querySelector(\"#pixel_canvas\");\n      const storedCanvas = localStorage.getItem('savedCanvas');\n      if(storedCanvas) {\n        canvas.innerHTML = '';\n        canvas.innerHTML += storedCanvas;\n      }\n    }\n  }\n  \n  const handlePrint = (e) => {\n    e.preventDefault();\n    const canvas = document.querySelector(\"#pixel_canvas\");\n\n    localStorage.setItem('printableCanvas', canvas.innerHTML);\n    window.open(\"/print.html\", \"_blank\")\n  }\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n\n    const canvas = document.querySelector(\"#pixel_canvas\");\n    if (event && !window.confirm('This will create new canvas and will remove all unsaved data, are you sure you want to continue?')) {\n      return\n    }\n    canvas.innerHTML = '';\n    setBackground('#fff');\n    setCellColor({ color: '#009688', id: 1 })\n\n    for (let x = 0; x < height; x++) {\n      let row = document.createElement(\"tr\");\n      row.innerHTML += `<td class='no-border'><span class='cell-num'>${x + 1}</span></td>`\n      canvas.appendChild(row);\n\n      for (let y = 0; y < width; y++) {\n        let cell = document.createElement(\"td\");\n        cell.id = `cell-${x}-${y}`\n        row.appendChild(cell);\n      }\n    }\n    let numRow = document.createElement(\"tr\");\n    canvas.appendChild(numRow);\n    let placeholderCell = document.createElement(\"td\");\n    placeholderCell.classList.add('no-border')\n\n    numRow.appendChild(placeholderCell);\n\n    for (let y = 0; y < width; y++) {\n      let cell = document.createElement(\"td\");\n      cell.classList.add('no-border')\n      cell.innerHTML = `<span class='cell-num'>${y + 1}</span>`\n      cell.id = `cell-${y + 1}-${y}`\n      numRow.appendChild(cell);\n    }\n  }\n\n  // Cell color\n  const handleCellColor = (color) => {\n    setCellColor(color);\n/*     if (!colors[color.hex]) {\n      const tmpColors = { ...colors };\n      tmpColors[color.hex] = Object.keys(colors).length + 1\n      setColors(tmpColors);\n    } */\n  }\n\n  const handleCellColorOnClick = (event) => {\n    let idToBeUpdated = event.target.id;\n    \n    // TODO; Figure out how to make this but faster\n    /*\n    let bool = false;\n    if (idToBeUpdated[0] === ('p')) {\n      idToBeUpdated = event.target.parentNode.id;\n      bool = true;\n    } */\n    if ((document.getElementById(idToBeUpdated) && String(idToBeUpdated).startsWith('cell'))) {\n      document.getElementById(idToBeUpdated).style.backgroundColor = cellColor.color;\n      document.getElementById(idToBeUpdated).innerHTML = `<p id='ph-${idToBeUpdated}' class='cell-num noselect'>${colors[cellColor.id-1].id}</p>`;\n    }\n      setMouseDown(true);\n  }\n\n  const handleMouseState = () => {\n    setMouseDown(false);\n  }\n\n\n  const handleBackgroundImage = (e) => {\n    e.preventDefault();\n\n    if (window.FileReader) {\n      const file = e.target.files[0];\n      console.log(file);\n      const reader = new FileReader();\n\n      reader.onload = (ev) => {\n          setBackgroundImage(ev.target.result)\n          console.log(backgroundImage)\n      }\n      reader.readAsDataURL(file); \n    } else {\n      window.alert('file reading not supported')\n    }\n  }\n  // Remove color\n  const handleColorRemove = (event) => {\n    let idToBeUpdated = event.target.id;\n\n    console.log(idToBeUpdated[0])\n    if (idToBeUpdated[0] === ('p')) {\n      idToBeUpdated = event.target.parentNode.id;\n    }\n\n    document.getElementById(idToBeUpdated).style.backgroundColor = '';\n    document.getElementById(idToBeUpdated).innerHTML = '';\n  }\n\n  const handleMenuVisible = () => {\n    setMenuVisible(!menuVisible);\n  }\n\n  // TODO: Separate into single components\n  return (\n    <div className=\"App\">\n\n      <header className=\"App-header\">\n        <Menu\n          handleLoadCanvas={handleLoadCanvas}\n          handlePrint={handlePrint}\n          handleSave={handleSave}\n          colors={colors}\n          setColors={setColors}\n          height={height}\n          width={width}\n          cellColor={cellColor}\n          menuVisible={menuVisible}\n          handleChange={handleChange}\n          handleSubmit={handleSubmit}\n          handleBackgroundImage={handleBackgroundImage}\n          handleCellColor={handleCellColor}\n          handleMenuVisible={handleMenuVisible}\n        />\n      </header>\n\n      <div className=\"App-Content\">\n\n\n        <div className={menuVisible ? \"Canvas\" : \"Canvas full-width\"}>\n          <table\n            id=\"pixel_canvas\"\n            style={{backgroundColor: background, backgroundImage: `url(${backgroundImage})`}}\n            onMouseDown={handleCellColorOnClick}\n            onMouseMove={mouseDown ? handleCellColorOnClick : null}\n            onMouseUp={handleMouseState}\n            onMouseLeave={handleMouseState}\n            onTouchStart={handleCellColorOnClick}\n            onTouchMove={mouseDown ? handleCellColorOnClick : null}\n            onTouchEnd={handleMouseState}\n            onDoubleClick={handleColorRemove}>\n          </table>\n        </div>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}